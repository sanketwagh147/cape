name: Azure app deployment

on:
  push:
    branches: [ main ]

env:
  REGISTRY: forecastcontainerregistry.azurecr.io
  IMAGE_NAME: forecast-backend

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_PASSWORD: postgres
        ports:
        - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - uses: actions/checkout@v3
      - name: Use python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          cache: 'pip'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run Django server
        run: |
          python manage.py migrate
          python manage.py test &&
          python manage.py runserver &
        env:
          DATABASE_NAME: postgres
          DATABASE_HOST: localhost
          DATABASE_USER: postgres
          DATABASE_PASSWORD: postgres
          DATABASE_PORT: 5432
          ENGINE: django.db.backends.postgresql_psycopg2
          SECRET_KEY: django-insecure-key-${{ github.run_id }}-${{ github.run_attempt }}
          EMAIL_BACKEND: django.core.mail.backends.smtp.EmailBackend
          EMAIL_HOST: smtp.gmail.com
          EMAIL_PORT: 587
          EMAIL_HOST_USER: mailtest.neuraldynamics@gmail.com
          EMAIL_HOST_PASSWORD: gavxbgrwutoarlgm
          EMAIL_USE_SSL: False
          EMAIL_USE_TLS: True
          FRONTEND_DOMAIN: http://127.0.0.1:8000/
          BACKEND_DOMAIN: http://127.0.0.1:8000/
          ALLOWED_HOSTS: localhost,127.0.0.1,0.0.0.0,back
          SEMIANNUAL_SUBSCRIPTION_ID: price_1NiEylGfEsbU7cjfFhUU7AQn
          MONTHLY_SUBSCRIPTION_ID: price_1NiEyGGfEsbU7cjfBW3raSVW
          ANNUAL_SUBSCRIPTION_ID: price_1NiEzDGfEsbU7cjf5dWF1mlz
          STRIPE_WEBHOOK_SECRET: whsec_f496a8325982949ff5bf061953686eceea15efe76fd8475a927ef38f9088d18f
          STRIPE_SECRET_KEY: sk_test_51NiEtcGfEsbU7cjfOZPDmzxLmANiRDfgIafTafNApl3cEi890G6KrZCVSGAS0f7bUvNf6MDm11x694Il646W8blP00RJcjZGfE
          STRIPE_PUBLISHABLE_KEY: pk_test_51NiEtcGfEsbU7cjfMLHIKr51NN2fKZNB2hYKbFqgBZJB4G71xfmOpwcGUnwzLLMbjDPCi1dTsGh5y47ItNj2Qimo00EDec6CKM

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-backend
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Login to Azure Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.AZURE_REGISTRY_LOGIN }}
          password: ${{ secrets.AZURE_REGISTRY_PASSWORD }}
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile.prod
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          cache-from: type=local,src=/tmp/.build-cache
          cache-to: type=local,dest=/tmp/.buildx-cache