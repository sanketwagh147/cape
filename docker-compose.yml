version: '3.8'

services:
  db:
    container_name: forecast-database
    image: postgres:14.0-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=${DATABASE_NAME}
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
    networks:
      - back_network

  redis:
    container_name: forecast-redis
    image: redis:alpine
    networks:
      - back_network

  stripe-cli:
    image: stripe/stripe-cli
    container_name: stripe-cli
    command: "listen --api-key ${STRIPE_SECRET_KEY} --forward-to back:8000/forecast/stripe/webhook/"
    networks:
      - back_network
    depends_on:
      - back

  back:
    image: forecast-backend
    container_name: forecast-backend
    working_dir: /usr/src/app/
    build:
      context: .
      dockerfile: Dockerfile
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/usr/src/app/
      - back-static:/usr/src/app/allstaticfiles
      - ./media/:/usr/src/app/media
    ports:
      - 8000:8000
    environment:
      - DATABASE_NAME=${DATABASE_NAME}
      - DATABASE_USER=${DATABASE_USER}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DATABASE_HOST=db
      - DATABASE_PORT=5432
      - ENGINE=django.db.backends.postgresql_psycopg2

      - FRONTEND_DOMAIN=${FRONTEND_DOMAIN}
      - BACKEND_DOMAIN=${BACKEND_DOMAIN}

      - TIMEZONE=UTC

      - EMAIL_BACKEND=${EMAIL_BACKEND}
      - EMAIL_HOST=${EMAIL_HOST}
      - EMAIL_PORT=${EMAIL_PORT}
      - EMAIL_HOST_USER=${EMAIL_HOST_USER}
      - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD}
      - EMAIL_USE_SSL=${EMAIL_USE_SSL}
      - EMAIL_USE_TLS=${EMAIL_USE_TLS}

      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - STRIPE_WEBHOOK_SECRET=${STRIPE_WEBHOOK_SECRET}
      - STRIPE_PUBLISHABLE_KEY=${STRIPE_PUBLISHABLE_KEY}

      - SEMIANNUAL_SUBSCRIPTION_ID=${SEMIANNUAL_SUBSCRIPTION_ID}
      - MONTHLY_SUBSCRIPTION_ID=${MONTHLY_SUBSCRIPTION_ID}
      - ANNUAL_SUBSCRIPTION_ID=${ANNUAL_SUBSCRIPTION_ID}

      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
    logging:
      options:
        max-size: "10m"
        max-file: "3"
    depends_on:
      - db
    networks:
    - back_network

networks:
  back_network:
    driver: bridge

volumes:
  postgres_data:
  back-static: